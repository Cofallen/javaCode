// 常见数据结构：
// 栈  (Stack): 特殊的线性表，只能在一个固定端进行数据结点进行数据的插入和删除
// 队列 (Queue): 和栈类似。不同：队列只允许在表的一端进行插入操作，在另一端进行删除操作
// 数组 (Array): 同类型变量集合
// 链表 (Linked List): 数据元素按照链式存储结构进行存储的数据结构，具有在物理上存在非连续的特点
// 树   (Tree):  非线性数据结构。包括2个结点的有穷集合K
// 图   (Graph): 另一种非线性数据结构。在图结构中，数据节点一般 成为顶点，边是顶点的有序偶对
// 堆   (Heap):  一种特殊的树形数据结构，一般讨论为二叉堆
// 散列表(Hash table): 源于散列函数(Hash function), 思想是如果在结构中存在关键字和T相等的记录，那么必定在F(T)的存储位置可以找到该记录，
//                    可以不用进行比较操作二直接取得所查记录

// 常用算法
// 检索： 在数据结构里查找满足一定条件的节点
// 插入： 往数据结构中增加新的节点
// 删除： --
// 更新： 该变指定节点的一个或多个字段的值
// 排序： 把节点按魔种制定的顺序重新弄排列，例如递增或递减


public class Main {
    public static void main(String[] args){
//        insertionSort.end();
        shellSort.end();
    }
}

